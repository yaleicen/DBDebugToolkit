name: Sync Branches After Release

on:
  push:
    branches:
      - release/*  # 匹配 release 文件夹下的所有分支

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Fetch all branches
      run: git fetch --all
    - name: Check GITHUB_TOKEN
      run: echo ${{ secrets.GITHUB_TOKEN }}
    - name: Merge release into master
      if: startsWith(github.ref,'refs/heads/release/')
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git checkout master
        branch_name=$(echo $GITHUB_REF | sed -e's|^refs/heads/release/||')
        echo "尝试合并的分支名称: $branch_name"
        if git merge --no-edit origin//release$branch_name; then
          echo "开始推送合并后的 master 分支"
          git push origin master
          release_to_master_result="Success"
        else
          echo "合并冲突或其他错误，正在检查冲突文件..."
          conflict_files=$(git diff --name-only --diff-filter=U)
          if [ -n "$conflict_files" ]; then
            echo "发现冲突文件: $conflict_files"
          else
            echo "合并失败，但未发现冲突文件，可能存在其他问题"
          fi
          git merge --abort
          release_to_master_result="Failed"
        fi
        echo "release merge into master：$release_to_master_result"
        echo "release_to_master_result=$release_to_master_result" >> $GITHUB_ENV
    - name: Merge master into develop
      if: env.release_to_master_result == "Success" && startsWith(github.ref,'refs/heads/release/')
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git checkout develop
        master_to_develop_result="Failed"
        if git merge master --no-edit; then
          echo "开始推送合并后的 develop 分支"
          git push origin develop
          master_to_develop_result="Success"
        else
          git merge --abort
        fi
        echo "master merge into develop：$master_to_develop_result"
        echo "master_to_develop_result=$master_to_develop_result" >> $GITHUB_ENV
    - name: Merge develop into feature branches
      if: env.master_to_develop_result == "Success" && startsWith(github.ref,'refs/heads/release/')
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git checkout develop
        feature_branch_results=()
        for branch in $(git branch -r | grep 'origin/feature/' | sed 's|origin/||'); do
          git checkout $branch
          result="Failed"
          if git merge develop --no-edit; then
            echo "开始推送合并后的 $branch 分支"
            git push origin $branch
            result="Success"
          else
            git merge --abort
          fi
          feature_branch_results+=("develop merge into feature/$branch：$result")
        done
        for res in "${feature_branch_results[@]}"; do
          echo $res
        done
